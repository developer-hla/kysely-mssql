name: Publish to npm

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.1.5)'
        required: true
        type: string
      dry_run:
        description: 'Dry run (skip actual publish)'
        required: false
        type: boolean
        default: true

jobs:
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # Required for npm provenance

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # Manual trigger - use input version
            VERSION="${{ inputs.version }}"
          else
            # Release trigger - extract from tag name
            TAG_NAME="${{ github.event.release.tag_name }}"
            VERSION=${TAG_NAME#v}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $VERSION"

      - name: Update package.json version
        run: |
          # Update version in package.json using node
          node -e "const fs=require('fs'); const pkg=require('./package.json'); pkg.version='${{ steps.get_version.outputs.version }}'; fs.writeFileSync('./package.json', JSON.stringify(pkg, null, 2) + '\n');"
          echo "Updated package.json to version ${{ steps.get_version.outputs.version }}"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm run lint

      - name: Type check
        run: pnpm run typecheck

      - name: Run tests
        run: pnpm run test

      - name: Build
        run: pnpm run build

      - name: Verify package contents
        run: |
          echo "Package contents that will be published:"
          npm pack --dry-run

      - name: Publish to npm
        if: ${{ github.event_name == 'release' || inputs.dry_run == false }}
        run: pnpm publish --access public --no-git-checks --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Dry run - Skip publish
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.dry_run == true }}
        run: |
          echo "Dry run mode - skipping actual publish to npm"
          echo "Would publish version ${{ steps.get_version.outputs.version }}"
          pnpm pack
          echo "Package created successfully"
